# Generated by Django 3.0.7 on 2020-06-21 15:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('screen_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=240, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('profile_banner', models.ImageField(upload_to='')),
                ('profile_image', models.ImageField(upload_to='')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_ative', models.BooleanField(default=True)),
                ('followers', models.ManyToManyField(related_name='followers_users', related_query_name='followers_users', to=settings.AUTH_USER_MODEL)),
                ('following', models.ManyToManyField(related_name='following_users', related_query_name='following_users', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('text', models.CharField(max_length=140)),
                ('entities', models.ManyToManyField(blank=True, to='api.Entities')),
                ('favourited', models.ManyToManyField(blank=True, related_name='favourites_statuses', to=settings.AUTH_USER_MODEL)),
                ('quoted_status', models.ManyToManyField(blank=True, related_name='quotations', to='api.Status')),
                ('reply_to', models.ManyToManyField(blank=True, related_name='replies', to='api.Status')),
                ('retweeted_status', models.ManyToManyField(blank=True, related_name='retweets', to='api.Status')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
